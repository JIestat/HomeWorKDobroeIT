public class Main {

    public static void main(String[] args) {
        System.out.println("--------------------------------"+"Задание 1"+"----------------------------------------");
        //Сделать так, чтобы животные одинакового типа и с одинаковым возрастом и именем
        // при проверке на equals были распознаны, как одинаковые.
        Cat cat0 = new Cat(8,"Тузик");
        Cat cat1 = new Cat(8,"Тузик");
        System.out.println(cat0.equals(cat1)+"\n"); //false// после переопределения метда //true
      /*  cat0=cat1;
        System.out.println(cat0.equals(cat1)); //true
        Equals   возвращает  либо true либо false...
         2 разных обьекта не могут быть распознаные как одинаковые, могут в том случае если ссылки будут ссылаться на один и тот же обьект!
         или делая переопределение метода equals  в классе Animal.*/

        System.out.println("--------------------------------"+"Задание 2"+"----------------------------------------");
        // Реализовать метод toString() в супертипе, чтобы он печатал информацию о типе животного, возрасте и имени
        Cat cat2 = new Cat(2,"Cat2");
        Dog dog2 = new Dog(2,"Dog2");
        System.out.println(dog2);
        System.out.println(cat2+"\n");

        System.out.println("--------------------------------"+"Задание 3"+"----------------------------------------");
        //Создать реализации метода void dyingVoice() в Cat и Dog.
        // Метод должен печатать на консоль звук, издаваемый животным перед смертью(можно выбрать любой).
        // Сделать так, чтобы метод вызывался на животном перед его уничтожением сборщиком мусора.
        // Спровоцировать выполнение сборщика мусора(создать очень много объектов, на которые нет ссылок).
        // Убедиться, что животных слышно перед смертью.
            /*Dog dog = new Dog(1,"Timoty");
            dog.dyingVoice();
            dog=null;
            Dog dog1 = new Dog(1,"Timoty");
            dog1.dyingVoice();
            dog1=null;
            Dog dog2 = new Dog(1,"Timoty");
            dog2.dyingVoice();
            dog2=null;
           *///боюсь устану создавать  столько  обьектов
        /*for (int i = 0; i <888888 ; i++) {
            new Cat(1,"Texas");
            new Dog(0,"Pudel");
        }*/   // коментарий удалить перед отправкой на ревью, а то зависает

        System.out.println("\n"+"--------------------------------"+"Задание 4"+"----------------------------------------");
        //Создать статический метод, который принимает на вход объект,
        // и возвращает строку, содержащую имя класса данного объекта.

        System.out.println(Util.nameObjects(cat0));//возвращаю в точку вызова метода строку
        System.out.println(Util.nameObjects(dog2));

    }
}
