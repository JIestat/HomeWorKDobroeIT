import sun.reflect.generics.reflectiveObjects.NotImplementedException;

public class Main {

    public static void main(String[] args) {
        System.out.println("--------------------------------" + "Задание 1" + "----------------------------------------");
        //Сделать так, чтобы животные одинакового типа и с одинаковым возрастом и именем
        // при проверке на equals были распознаны, как одинаковые.
        Cat cat0 = new Cat(8, "Тузик");
        Cat cat1 = new Cat(8, "Тузик");
        Dog dog24 = new Dog(1, "Pif");
        System.out.println(cat0.equals(dog24));
        System.out.println(cat0.equals(cat0));
        System.out.println(cat0.equals(cat1) + "\n"); 

        System.out.println("--------------------------------" + "Задание 2" + "----------------------------------------");
        // Реализовать метод toString() в супертипе, чтобы он печатал информацию о типе животного, возрасте и имени
        Cat cat2 = new Cat(2, "Cat2");
        Dog dog2 = new Dog(2, "Dog2");
        System.out.println(dog2);
        System.out.println(cat2 + "\n");

        System.out.println("--------------------------------" + "Задание 3" + "----------------------------------------");
        //Создать реализации метода void dyingVoice() в Cat и Dog.
        // Метод должен печатать на консоль звук, издаваемый животным перед смертью(можно выбрать любой).
        // Сделать так, чтобы метод вызывался на животном перед его уничтожением сборщиком мусора.
        // Спровоцировать выполнение сборщика мусора(создать очень много объектов, на которые нет ссылок).
        // Убедиться, что животных слышно перед смертью.
        for (int i = 0; i <888888 ; i++) {
            new Cat(1,"Texas");
            new Dog(0,"Pudel");
        }   

        System.out.println("\n" + "--------------------------------" + "Задание 4" + "----------------------------------------");
        //Создать статический метод, который принимает на вход объект,
        // и возвращает строку, содержащую имя класса данного объекта.

        System.out.println(Util.nameObjects(cat0));//возвращаю в точку вызова метода строку
        System.out.println(Util.nameObjects(dog2));

        System.out.println("\n" + "--------------------------------" + "Задание 5" + "----------------------------------------");

        Animal[] animals = {new Dog(1, " Test"),
                new Cat(2, "Test2"),
                new Fish(),
                new Dog(1, " Test"),
                new Cat(2, "Test2"),
                new Fish(),
                new Fish(),
                new Fish()};

        int countFishVoice = 0;

        for (Animal animal : animals) {
            try {
                animal.voice();
            } catch (NotImplementedException exc) {
                countFishVoice++;
            }
        }
        System.out.println(" Рыбы пытались говорить:" + countFishVoice + " Раз(а)");
    }
}
